mean(agg_ints[[1]])
mean(agg_ints[[2]])
# Average interval width
mean(centr_ints[[2]] - centr_ints[[1]], na.rm=TRUE)
mean(agg_ints[[2]] - agg_ints[[1]], na.rm=TRUE)
203.46/45.51
sqrt(20)
library(spatstat)
library(ggplot2)
source("fit_homog.R")
source("predict.ppm_homog.R")
source("predconfPois2.R")
fire_centr <- fit_homog(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit_homog(rescale(clmfires, 100), method = "divided", type = "trend")
library(spatstat)
library(ggplot2)
source("fit_homog.R")
source("predict.ppm_homog.R")
source("predconfPois2.R")
fire_centr <- fit_homog(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit_homog(rescale(clmfires, 100), method = "divided", type = "trend")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
# Point prediction for entire window is the same for both
mean(centr_preds)
mean(agg_preds)
# Intervals
mean(centr_ints[[1]])
mean(centr_ints[[2]])
mean(agg_ints[[1]])
mean(agg_ints[[2]])
# Average interval width
mean(centr_ints[[2]] - centr_ints[[1]], na.rm=TRUE)
mean(agg_ints[[2]] - agg_ints[[1]], na.rm=TRUE)
203.4733/45.51015
sqrt(20)
203.4733/2
45.51/2
22.755*sqrt(20)
nCores
library(spatstat)
library(ggplot2)
source("fit_homog.R")
source("predict.ppm_homog.R")
source("predconfPois2.R")
fire_centr <- fit_homog(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit_homog(rescale(clmfires, 100), method = "divided", type = "trend")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
# Point prediction for entire window is the same for both
mean(centr_preds)
mean(agg_preds)
# Intervals
mean(centr_ints[[1]])
mean(centr_ints[[2]])
mean(agg_ints[[1]])
mean(agg_ints[[2]])
# Average interval width
mean(centr_ints[[2]] - centr_ints[[1]], na.rm=TRUE)
mean(agg_ints[[2]] - agg_ints[[1]], na.rm=TRUE)
library(spatstat)
library(ggplot2)
source("fit_homog.R")
source("predict.ppm_homog.R")
source("predconfPois_homog.R")
fire_centr <- fit_homog(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit_homog(rescale(clmfires, 100), method = "divided", type = "trend")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
# Point prediction for entire window is the same for both
mean(centr_preds)
mean(agg_preds)
# Intervals
mean(centr_ints[[1]])
mean(centr_ints[[2]])
mean(agg_ints[[1]])
mean(agg_ints[[2]])
# Average interval width
mean(centr_ints[[2]] - centr_ints[[1]], na.rm=TRUE)
mean(agg_ints[[2]] - agg_ints[[1]], na.rm=TRUE)
# Count predictions
n_regions <- 5
region_radius <- 0.75
set.seed(75193)
centroids_x <- runif(n_regions, min(clmfires$x)/100,
max(clmfires$x)/100)
centroids_y <- runif(n_regions, min(clmfires$y)/100,
max(clmfires$y)/100)
fire_centr <- fit_homog(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
for (i in 1:n_regions) {
temp_window <- disc(radius = region_radius, centre = c(centroids_x[i], centroids_y[i]))
fire_centr <- fit_homog(rescale(clmfires, 100), window = temp_window,
method = "full", type = "count")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit_homog(rescale(clmfires, 100), window = temp_window,
method = "divided", type = "count")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
true_n <- rescale(clmfires, 100)[temp_window]$n
cat(paste0("Region ", i, ":\n"))
cat(paste0("True count in region ", i, ": ", true_n, "\n"))
cat(paste0("Estimated count in region ", i, " from full model: ",
round(centr_preds, 2), " (",
round(centr_ints[1], 2), ", ",
round(centr_ints[2], 2), ") \n"))
cat(paste0("Estimated count in region ", i, " from partitioned model: ",
round(agg_preds, 2), " (",
round(agg_ints[1], 2), ", ",
round(agg_ints[2], 2), ") \n"))
cat("\n")
}
mean(agg_ints[[1]])
mean(agg_ints[[2]])
# Intervals
mean(centr_ints[[1]])
mean(centr_ints[[2]])
library(spatstat)
library(ggplot2)
source("fit_homog.R")
source("predict.ppm_homog.R")
library(spatstat)
library(ggplot2)
source("fit_homog.R")
source("predict.ppm_homog.R")
source("predconfPois_homog.R")
fire_centr <- fit_homog(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit_homog(rescale(clmfires, 100), method = "divided", type = "trend")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
# Point prediction for entire window is the same for both
mean(centr_preds)
mean(agg_preds)
# Intervals
mean(centr_ints[[1]])
mean(centr_ints[[2]])
mean(agg_ints[[1]])
mean(agg_ints[[2]])
library(spatstat)
library(ggplot2)
source("fit_homog.R")
source("predict.ppm_homog.R")
source("predconfPois_homog.R")
fire_centr <- fit_homog(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit_homog(rescale(clmfires, 100), method = "divided", type = "trend")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
# Point prediction for entire window is the same for both
mean(centr_preds)
mean(agg_preds)
# Intervals
mean(centr_ints[[1]])
mean(centr_ints[[2]])
mean(agg_ints[[1]])
mean(agg_ints[[2]])
library(spatstat)
library(ggplot2)
source("fit_homog.R")
source("predict.ppm_homog.R")
source("predconfPois_homog.R")
fire_centr <- fit_homog(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit_homog(rescale(clmfires, 100), method = "divided", type = "trend")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
# Point prediction for entire window is the same for both
mean(centr_preds)
mean(agg_preds)
# Intervals
mean(centr_ints[[1]])
mean(centr_ints[[2]])
mean(agg_ints[[1]])
mean(agg_ints[[2]])
library(spatstat)
library(ggplot2)
source("fit_homog.R")
library(spatstat)
library(ggplot2)
source("fit_homog.R")
source("predict.ppm_homog.R")
source("predconfPois_homog.R")
fire_centr <- fit_homog(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit_homog(rescale(clmfires, 100), method = "divided", type = "trend")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
# Point prediction for entire window is the same for both
mean(centr_preds)
mean(agg_preds)
# Intervals
mean(centr_ints[[1]])
mean(centr_ints[[2]])
mean(agg_ints[[1]])
mean(agg_ints[[2]])
library(spatstat)
library(ggplot2)
source("fit_homog.R")
source("predict.ppm_homog.R")
source("predconfPois_homog.R")
fire_centr <- fit_homog(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit_homog(rescale(clmfires, 100), method = "divided", type = "trend")
# Intervals
mean(centr_ints[[1]])
mean(centr_ints[[2]])
library(spatstat)
library(ggplot2)
source("fit_homog.R")
source("predict.ppm_homog.R")
source("predconfPois_homog.R")
fire_centr <- fit_homog(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit_homog(rescale(clmfires, 100), method = "divided", type = "trend")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
# Point prediction for entire window is the same for both
mean(centr_preds)
mean(agg_preds)
# Intervals
mean(centr_ints[[1]])
mean(centr_ints[[2]])
mean(agg_ints[[1]])
mean(agg_ints[[2]])
library(spatstat)
library(ggplot2)
source("fit_homog.R")
source("predict.ppm_homog.R")
source("predconfPois_homog.R")
fire_centr <- fit_homog(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit_homog(rescale(clmfires, 100), method = "divided", type = "trend")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
# Point prediction for entire window is the same for both
mean(centr_preds)
mean(agg_preds)
# Intervals
mean(centr_ints[[1]])
mean(centr_ints[[2]])
mean(agg_ints[[1]])
mean(agg_ints[[2]])
library(spatstat)
library(ggplot2)
source("fit_homog.R")
source("predict.ppm_homog.R")
source("predconfPois_homog.R")
fire_centr <- fit_homog(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit_homog(rescale(clmfires, 100), method = "divided", type = "trend")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
# Point prediction for entire window is the same for both
mean(centr_preds)
mean(agg_preds)
# Intervals
mean(centr_ints[[1]])
mean(centr_ints[[2]])
mean(agg_ints[[1]])
mean(agg_ints[[2]])
mean(c(1024, 1115))
1115-1024
sqrt(91)
library(spatstat)
library(ggplot2)
source("fit_homog.R")
source("predict.ppm_homog.R")
source("predconfPois_homog.R")
fire_centr <- fit_homog(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit_homog(rescale(clmfires, 100), method = "divided", type = "trend")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
# Point prediction for entire window is the same for both
mean(centr_preds)
mean(agg_preds)
# Intervals
mean(centr_ints[[1]])
mean(centr_ints[[2]])
mean(agg_ints[[1]])
mean(agg_ints[[2]])
# Average interval width
mean(centr_ints[[2]] - centr_ints[[1]], na.rm=TRUE)
mean(agg_ints[[2]] - agg_ints[[1]], na.rm=TRUE)
library(spatstat)
library(spatstat.model)
?predconfPois
?predict.ppm
?integral.im
library(spatstat)
library(ggplot2)
source("fit.R")
source("predict.ppm2.R")
source("predconfPois2.R")
fire_centr <- fit(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fit1 <- ppm(unmark(obj) ~ polynom(x, y, 3))
obj <- recale(clmfires, 100)
obj <- rescale(clmfires, 100)
fit1 <- ppm(unmark(obj) ~ polynom(x, y, 3))
object=fit1
# Count predictions
n_regions <- 5
region_radius <- 0.75
set.seed(75193)
centroids_x <- runif(n_regions, min(clmfires$x)/100,
max(clmfires$x)/100)
centroids_y <- runif(n_regions, min(clmfires$y)/100,
max(clmfires$y)/100)
fire_centr <- fit(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
image(centr_preds, zlim = bounds,
main = "Centralized Model \n (Wildfires Data)") # Whole model
i=1
temp_window <- disc(radius = region_radius, centre = c(centroids_x[i], centroids_y[i]))
window = temp_window
window
class(window)
region=window
new.coef=NULL
lam <- predict(object, window=region, new.coef=new.coef)
lam
integral.im(lam)
lam$v
sum(lam$v, na.rm=TRUE)
mean(lam$v, na.rm=TRUE)
class(obj)
?predict.ppp
class(object)
?predict
class(object)
object
lam
plot(lam)
mean(!is.na(lam$v))
pi
pi/4
object$trend
object$method
object$fitter
object$projected
object$coef
predict(object)
predict.ppm(object)
predict.ppm2(object)
?GLMpredict
getglmfit(object)
class(getglmfit(object))
?predict.glm
GLMpredict(Object)
GLMpredict(object)
GLMpredict(glmfit, newdata, coeffs, changecoef = changedcoef)
object
class(object)
predict(object)
predict(object, window = region)
pred=predict(object, window = region)
pred
pred$v
library(spatstat)
library(ggplot2)
source("fit.R")
source("predict.ppm2.R")
source("predconfPois2.R")
fire_centr <- fit(rescale(clmfires, 100), method = "full", type = "trend")
fire_centr$preds
plot(fire_centr$preds)
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit(rescale(clmfires, 100), method = "divided", type = "trend")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
region_radius <- 0.75
# Count predictions
n_regions <- 5
region_radius <- 0.75
set.seed(75193)
centroids_x <- runif(n_regions, min(clmfires$x)/100,
max(clmfires$x)/100)
centroids_y <- runif(n_regions, min(clmfires$y)/100,
max(clmfires$y)/100)
fire_centr <- fit(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
temp_window <- disc(radius = region_radius, centre = c(centroids_x[i], centroids_y[i]))
i=1
temp_window <- disc(radius = region_radius, centre = c(centroids_x[i], centroids_y[i]))
fire_centr <- fit(rescale(clmfires, 100), window = temp_window,
method = "full", type = "count")
centr_preds <- fire_centr$preds
centr_preds
fire_centr <- fit(rescale(clmfires, 100), window = temp_window,
method = "full")
sum(fire_centr$preds$v)
sum(fire_centr$preds$v, na.rm=TRUE)
mean(fire_centr$preds$v, na.rm=TRUE)
centr_preds
integral.im(predict(object))
obj
fit1 <- ppm(unmark(obj) ~ polynom(x, y, 3))
obj <- rescale(clmfires, 100)
fit1 <- ppm(unmark(obj) ~ polynom(x, y, 3))
integral.im(predict(fit1))
predict(fit1, type="count")
integral.im
?integral.im
integral.im(predict(fit1))
pred=predict(fit1)
pred=predict(fit1)$v
mean(pred, na.rm=T)
plot(clmfires)
image(clmfires)
min(clmfires$x)
max(clmfires$x)
max(clmfires$y)
min(clmfires$y)
sum(pred, na.rm=T)
sum(pred, na.rm=T) / (250*375)
temp_window
predict(fit1, window = temp_window, type="count")
integral.im(predict(fit1, window = temp_window))
class(temp_window)
plot(temp_window)
area.owin(temp_window)
pred <- predict(fit1, window = temp_window)$v
integral.im(pred)
pred <- predict(fit1, window = temp_window)
integral.im(pred)
mean(pred$v, na.rm=TRUE)
mean(pred$v, na.rm=TRUE)*area.owin(temp_window)
mean(pred$v, na.rm=TRUE)*1.766436449
volume(temp_window)
volume(temp_window)*2606.725
integral.im
integral.im(pred)
f <_ pred
f=pred
verifyclass(f, "im")
typ <- f$type
typ
domain=NULL
is.tess(domain)
a <- with(f, sum(v, na.rm = TRUE) * xstep * ystep)
xstep
?with
f
f <- pred
verifyclass(f, "im")
if (!is.null(weight)) {
if (is.function(weight))
weight <- as.im(weight, W = as.owin(f))
f <- f * weight
}
a <- with(f, sum(v, na.rm = TRUE) * xstep * ystep)
a
v
with(pred, sum(pred$v, na.rm=T) * pred$xstep * pred$ystep)
pred$xstep
pred$ystep
?predict.ppm
min(temp_window$xrange)
temp_window$xrange
temp_window$n
temp_window$yrange
diff(temp_window$yrange)
diff(temp_window$xrange)
with(pred, sum(v, na.rm=T) * xstep * ystep)
pred <- predict(object, window = temp_window)
pred <- predict(fit1, window = temp_window)
integral.im(pred)
class(fit1)
pred
1.5/128
sum(pred$v, na.rm=TRUE)
sum(predict(fit2)$v, na.rm=TRUE)
nCores <- 20
indices <- sample(1:nCores, size = obj$n, replace = TRUE)
models <- vector("list", nCores)
i=1
disk <- subset(unmark(obj), indices == i)
fit2 <_ ppm(disk ~ polynom(x, y, 3))
fit2 <- ppm(disk ~ polynom(x, y, 3))
sum(predict(fit2)$v, na.rm=TRUE)
33605898/sum(predict(fit2)$v, na.rm=TRUE)
mean(pred$v, na.rm=TRUE)
mean(pred$v, na.rm=TRUE) / mean(predict(fit2)$v, na.rm=TRUE)
nCore
nCores
pred <- predict(fit1)
mean(pred$v, na.rm=TRUE) / mean(predict(fit2)$v, na.rm=TRUE)
sum(pred$v, na.rm=TRUE) / sum(predict(fit2)$v, na.rm=TRUE)
?GLMpredict
GLMpredict
