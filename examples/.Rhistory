round(centr_preds, 2), " (",
round(centr_ints[1], 2), ", ",
round(centr_ints[2], 2), ") \n"))
cat(paste0("Estimated count in region ", i, " from partitioned model: ",
round(agg_preds, 2), " (",
round(agg_ints[1], 2), ", ",
round(agg_ints[2], 2), ") \n"))
cat("\n")
lines(temp_window$bdry[[1]]$x, temp_window$bdry[[1]]$y)
text(centroids_x[i], centroids_y[i], true_n)
}
region_radius <- 0.8
set.seed(851077)
centroids_x <- runif(n_regions, min(clmfires$x)/100,
max(clmfires$x)/100)
centroids_y <- runif(n_regions, min(clmfires$y)/100,
max(clmfires$y)/100)
fire_centr <- fit(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
image(centr_preds, zlim = bounds,
main = "Centralized Model \n (Wildfires Data)") # Whole model
for (i in 1:n_regions) {
temp_window <- disc(radius = region_radius, centre = c(centroids_x[i], centroids_y[i]))
fire_centr <- fit(rescale(clmfires, 100), window = temp_window,
method = "full", type = "count")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit(rescale(clmfires, 100), window = temp_window,
method = "divided", type = "count")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
true_n <- rescale(clmfires, 100)[temp_window]$n
cat(paste0("Region ", i, ":\n"))
cat(paste0("True count in region ", i, ": ", true_n, "\n"))
cat(paste0("Estimated count in region ", i, " from full model: ",
round(centr_preds, 2), " (",
round(centr_ints[1], 2), ", ",
round(centr_ints[2], 2), ") \n"))
cat(paste0("Estimated count in region ", i, " from partitioned model: ",
round(agg_preds, 2), " (",
round(agg_ints[1], 2), ", ",
round(agg_ints[2], 2), ") \n"))s
for (i in 1:n_regions) {
temp_window <- disc(radius = region_radius, centre = c(centroids_x[i], centroids_y[i]))
fire_centr <- fit(rescale(clmfires, 100), window = temp_window,
method = "full", type = "count")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit(rescale(clmfires, 100), window = temp_window,
method = "divided", type = "count")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
true_n <- rescale(clmfires, 100)[temp_window]$n
cat(paste0("Region ", i, ":\n"))
cat(paste0("True count in region ", i, ": ", true_n, "\n"))
cat(paste0("Estimated count in region ", i, " from full model: ",
round(centr_preds, 2), " (",
round(centr_ints[1], 2), ", ",
round(centr_ints[2], 2), ") \n"))
cat(paste0("Estimated count in region ", i, " from partitioned model: ",
round(agg_preds, 2), " (",
round(agg_ints[1], 2), ", ",
round(agg_ints[2], 2), ") \n"))
cat("\n")
lines(temp_window$bdry[[1]]$x, temp_window$bdry[[1]]$y)
text(centroids_x[i], centroids_y[i], true_n)
}
region_radius <- 0.75
set.seed(851067)
centroids_x <- runif(n_regions, min(clmfires$x)/100,
max(clmfires$x)/100)
centroids_y <- runif(n_regions, min(clmfires$y)/100,
max(clmfires$y)/100)
fire_centr <- fit(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
image(centr_preds, zlim = bounds,
main = "Centralized Model \n (Wildfires Data)") # Whole model
for (i in 1:n_regions) {
temp_window <- disc(radius = region_radius, centre = c(centroids_x[i], centroids_y[i]))
fire_centr <- fit(rescale(clmfires, 100), window = temp_window,
method = "full", type = "count")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit(rescale(clmfires, 100), window = temp_window,
method = "divided", type = "count")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
true_n <- rescale(clmfires, 100)[temp_window]$n
cat(paste0("Region ", i, ":\n"))
cat(paste0("True count in region ", i, ": ", true_n, "\n"))
cat(paste0("Estimated count in region ", i, " from full model: ",
round(centr_preds, 2), " (",
round(centr_ints[1], 2), ", ",
round(centr_ints[2], 2), ") \n"))
cat(paste0("Estimated count in region ", i, " from partitioned model: ",
round(agg_preds, 2), " (",
round(agg_ints[1], 2), ", ",
round(agg_ints[2], 2), ") \n"))
cat("\n")
lines(temp_window$bdry[[1]]$x, temp_window$bdry[[1]]$y)
text(centroids_x[i], centroids_y[i], true_n)
}
set.seed(8510067)
centroids_x <- runif(n_regions, min(clmfires$x)/100,
max(clmfires$x)/100)
centroids_y <- runif(n_regions, min(clmfires$y)/100,
max(clmfires$y)/100)
fire_centr <- fit(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
image(centr_preds, zlim = bounds,
main = "Centralized Model \n (Wildfires Data)") # Whole model
for (i in 1:n_regions) {
temp_window <- disc(radius = region_radius, centre = c(centroids_x[i], centroids_y[i]))
fire_centr <- fit(rescale(clmfires, 100), window = temp_window,
method = "full", type = "count")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit(rescale(clmfires, 100), window = temp_window,
method = "divided", type = "count")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
true_n <- rescale(clmfires, 100)[temp_window]$n
cat(paste0("Region ", i, ":\n"))
cat(paste0("True count in region ", i, ": ", true_n, "\n"))
cat(paste0("Estimated count in region ", i, " from full model: ",
round(centr_preds, 2), " (",
round(centr_ints[1], 2), ", ",
round(centr_ints[2], 2), ") \n"))
cat(paste0("Estimated count in region ", i, " from partitioned model: ",
round(agg_preds, 2), " (",
round(agg_ints[1], 2), ", ",
round(agg_ints[2], 2), ") \n"))
cat("\n")
lines(temp_window$bdry[[1]]$x, temp_window$bdry[[1]]$y)
text(centroids_x[i], centroids_y[i], true_n)
}
set.seed(85100367)
centroids_x <- runif(n_regions, min(clmfires$x)/100,
max(clmfires$x)/100)
centroids_y <- runif(n_regions, min(clmfires$y)/100,
max(clmfires$y)/100)
fire_centr <- fit(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
image(centr_preds, zlim = bounds,
main = "Centralized Model \n (Wildfires Data)") # Whole model
for (i in 1:n_regions) {
temp_window <- disc(radius = region_radius, centre = c(centroids_x[i], centroids_y[i]))
fire_centr <- fit(rescale(clmfires, 100), window = temp_window,
method = "full", type = "count")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit(rescale(clmfires, 100), window = temp_window,
method = "divided", type = "count")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
true_n <- rescale(clmfires, 100)[temp_window]$n
cat(paste0("Region ", i, ":\n"))
cat(paste0("True count in region ", i, ": ", true_n, "\n"))
cat(paste0("Estimated count in region ", i, " from full model: ",
round(centr_preds, 2), " (",
round(centr_ints[1], 2), ", ",
round(centr_ints[2], 2), ") \n"))
cat(paste0("Estimated count in region ", i, " from partitioned model: ",
round(agg_preds, 2), " (",
round(agg_ints[1], 2), ", ",
round(agg_ints[2], 2), ") \n"))
cat("\n")
lines(temp_window$bdry[[1]]$x, temp_window$bdry[[1]]$y)
text(centroids_x[i], centroids_y[i], true_n)
}
set.seed(45367)
centroids_x <- runif(n_regions, min(clmfires$x)/100,
max(clmfires$x)/100)
centroids_y <- runif(n_regions, min(clmfires$y)/100,
max(clmfires$y)/100)
fire_centr <- fit(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
image(centr_preds, zlim = bounds,
main = "Centralized Model \n (Wildfires Data)") # Whole model
for (i in 1:n_regions) {
temp_window <- disc(radius = region_radius, centre = c(centroids_x[i], centroids_y[i]))
fire_centr <- fit(rescale(clmfires, 100), window = temp_window,
method = "full", type = "count")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit(rescale(clmfires, 100), window = temp_window,
method = "divided", type = "count")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
true_n <- rescale(clmfires, 100)[temp_window]$n
cat(paste0("Region ", i, ":\n"))
cat(paste0("True count in region ", i, ": ", true_n, "\n"))
cat(paste0("Estimated count in region ", i, " from full model: ",
round(centr_preds, 2), " (",
round(centr_ints[1], 2), ", ",
round(centr_ints[2], 2), ") \n"))
cat(paste0("Estimated count in region ", i, " from partitioned model: ",
round(agg_preds, 2), " (",
round(agg_ints[1], 2), ", ",
round(agg_ints[2], 2), ") \n"))
cat("\n")
lines(temp_window$bdry[[1]]$x, temp_window$bdry[[1]]$y)
text(centroids_x[i], centroids_y[i], true_n)
}
set.seed(45361)
centroids_x <- runif(n_regions, min(clmfires$x)/100,
max(clmfires$x)/100)
centroids_y <- runif(n_regions, min(clmfires$y)/100,
max(clmfires$y)/100)
fire_centr <- fit(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
image(centr_preds, zlim = bounds,
main = "Centralized Model \n (Wildfires Data)") # Whole model
for (i in 1:n_regions) {
temp_window <- disc(radius = region_radius, centre = c(centroids_x[i], centroids_y[i]))
fire_centr <- fit(rescale(clmfires, 100), window = temp_window,
method = "full", type = "count")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit(rescale(clmfires, 100), window = temp_window,
method = "divided", type = "count")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
true_n <- rescale(clmfires, 100)[temp_window]$n
cat(paste0("Region ", i, ":\n"))
cat(paste0("True count in region ", i, ": ", true_n, "\n"))
cat(paste0("Estimated count in region ", i, " from full model: ",
round(centr_preds, 2), " (",
round(centr_ints[1], 2), ", ",
round(centr_ints[2], 2), ") \n"))
cat(paste0("Estimated count in region ", i, " from partitioned model: ",
round(agg_preds, 2), " (",
round(agg_ints[1], 2), ", ",
round(agg_ints[2], 2), ") \n"))
cat("\n")
lines(temp_window$bdry[[1]]$x, temp_window$bdry[[1]]$y)
text(centroids_x[i], centroids_y[i], true_n)
}
set.seed(45362)
centroids_x <- runif(n_regions, min(clmfires$x)/100,
max(clmfires$x)/100)
centroids_y <- runif(n_regions, min(clmfires$y)/100,
max(clmfires$y)/100)
fire_centr <- fit(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
image(centr_preds, zlim = bounds,
main = "Centralized Model \n (Wildfires Data)") # Whole model
for (i in 1:n_regions) {
temp_window <- disc(radius = region_radius, centre = c(centroids_x[i], centroids_y[i]))
fire_centr <- fit(rescale(clmfires, 100), window = temp_window,
method = "full", type = "count")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit(rescale(clmfires, 100), window = temp_window,
method = "divided", type = "count")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
true_n <- rescale(clmfires, 100)[temp_window]$n
cat(paste0("Region ", i, ":\n"))
cat(paste0("True count in region ", i, ": ", true_n, "\n"))
cat(paste0("Estimated count in region ", i, " from full model: ",
round(centr_preds, 2), " (",
round(centr_ints[1], 2), ", ",
round(centr_ints[2], 2), ") \n"))
cat(paste0("Estimated count in region ", i, " from partitioned model: ",
round(agg_preds, 2), " (",
round(agg_ints[1], 2), ", ",
round(agg_ints[2], 2), ") \n"))
cat("\n")
lines(temp_window$bdry[[1]]$x, temp_window$bdry[[1]]$y)
text(centroids_x[i], centroids_y[i], true_n)
}
set.seed(4530)
centroids_x <- runif(n_regions, min(clmfires$x)/100,
max(clmfires$x)/100)
centroids_y <- runif(n_regions, min(clmfires$y)/100,
max(clmfires$y)/100)
fire_centr <- fit(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
image(centr_preds, zlim = bounds,
main = "Centralized Model \n (Wildfires Data)") # Whole model
for (i in 1:n_regions) {
temp_window <- disc(radius = region_radius, centre = c(centroids_x[i], centroids_y[i]))
fire_centr <- fit(rescale(clmfires, 100), window = temp_window,
method = "full", type = "count")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit(rescale(clmfires, 100), window = temp_window,
method = "divided", type = "count")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
true_n <- rescale(clmfires, 100)[temp_window]$n
cat(paste0("Region ", i, ":\n"))
cat(paste0("True count in region ", i, ": ", true_n, "\n"))
cat(paste0("Estimated count in region ", i, " from full model: ",
round(centr_preds, 2), " (",
round(centr_ints[1], 2), ", ",
round(centr_ints[2], 2), ") \n"))
cat(paste0("Estimated count in region ", i, " from partitioned model: ",
round(agg_preds, 2), " (",
round(agg_ints[1], 2), ", ",
round(agg_ints[2], 2), ") \n"))
cat("\n")
lines(temp_window$bdry[[1]]$x, temp_window$bdry[[1]]$y)
text(centroids_x[i], centroids_y[i], true_n)
}
set.seed(45309)
centroids_x <- runif(n_regions, min(clmfires$x)/100,
max(clmfires$x)/100)
centroids_y <- runif(n_regions, min(clmfires$y)/100,
max(clmfires$y)/100)
fire_centr <- fit(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
image(centr_preds, zlim = bounds,
main = "Centralized Model \n (Wildfires Data)") # Whole model
for (i in 1:n_regions) {
temp_window <- disc(radius = region_radius, centre = c(centroids_x[i], centroids_y[i]))
fire_centr <- fit(rescale(clmfires, 100), window = temp_window,
method = "full", type = "count")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit(rescale(clmfires, 100), window = temp_window,
method = "divided", type = "count")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
true_n <- rescale(clmfires, 100)[temp_window]$n
cat(paste0("Region ", i, ":\n"))
cat(paste0("True count in region ", i, ": ", true_n, "\n"))
cat(paste0("Estimated count in region ", i, " from full model: ",
round(centr_preds, 2), " (",
round(centr_ints[1], 2), ", ",
round(centr_ints[2], 2), ") \n"))
cat(paste0("Estimated count in region ", i, " from partitioned model: ",
round(agg_preds, 2), " (",
round(agg_ints[1], 2), ", ",
round(agg_ints[2], 2), ") \n"))
cat("\n")
lines(temp_window$bdry[[1]]$x, temp_window$bdry[[1]]$y)
text(centroids_x[i], centroids_y[i], true_n)
}
set.seed(4509)
centroids_x <- runif(n_regions, min(clmfires$x)/100,
max(clmfires$x)/100)
centroids_y <- runif(n_regions, min(clmfires$y)/100,
max(clmfires$y)/100)
fire_centr <- fit(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
image(centr_preds, zlim = bounds,
main = "Centralized Model \n (Wildfires Data)") # Whole model
for (i in 1:n_regions) {
temp_window <- disc(radius = region_radius, centre = c(centroids_x[i], centroids_y[i]))
fire_centr <- fit(rescale(clmfires, 100), window = temp_window,
method = "full", type = "count")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit(rescale(clmfires, 100), window = temp_window,
method = "divided", type = "count")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
true_n <- rescale(clmfires, 100)[temp_window]$n
cat(paste0("Region ", i, ":\n"))
cat(paste0("True count in region ", i, ": ", true_n, "\n"))
cat(paste0("Estimated count in region ", i, " from full model: ",
round(centr_preds, 2), " (",
round(centr_ints[1], 2), ", ",
round(centr_ints[2], 2), ") \n"))
cat(paste0("Estimated count in region ", i, " from partitioned model: ",
round(agg_preds, 2), " (",
round(agg_ints[1], 2), ", ",
round(agg_ints[2], 2), ") \n"))
cat("\n")
lines(temp_window$bdry[[1]]$x, temp_window$bdry[[1]]$y)
text(centroids_x[i], centroids_y[i], true_n)
}
set.seed(7509)
centroids_x <- runif(n_regions, min(clmfires$x)/100,
max(clmfires$x)/100)
centroids_y <- runif(n_regions, min(clmfires$y)/100,
max(clmfires$y)/100)
fire_centr <- fit(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
image(centr_preds, zlim = bounds,
main = "Centralized Model \n (Wildfires Data)") # Whole model
for (i in 1:n_regions) {
temp_window <- disc(radius = region_radius, centre = c(centroids_x[i], centroids_y[i]))
fire_centr <- fit(rescale(clmfires, 100), window = temp_window,
method = "full", type = "count")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit(rescale(clmfires, 100), window = temp_window,
method = "divided", type = "count")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
true_n <- rescale(clmfires, 100)[temp_window]$n
cat(paste0("Region ", i, ":\n"))
cat(paste0("True count in region ", i, ": ", true_n, "\n"))
cat(paste0("Estimated count in region ", i, " from full model: ",
round(centr_preds, 2), " (",
round(centr_ints[1], 2), ", ",
round(centr_ints[2], 2), ") \n"))
cat(paste0("Estimated count in region ", i, " from partitioned model: ",
round(agg_preds, 2), " (",
round(agg_ints[1], 2), ", ",
round(agg_ints[2], 2), ") \n"))
cat("\n")
lines(temp_window$bdry[[1]]$x, temp_window$bdry[[1]]$y)
text(centroids_x[i], centroids_y[i], true_n)
}
set.seed(7519)
centroids_x <- runif(n_regions, min(clmfires$x)/100,
max(clmfires$x)/100)
centroids_y <- runif(n_regions, min(clmfires$y)/100,
max(clmfires$y)/100)
fire_centr <- fit(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
image(centr_preds, zlim = bounds,
main = "Centralized Model \n (Wildfires Data)") # Whole model
for (i in 1:n_regions) {
temp_window <- disc(radius = region_radius, centre = c(centroids_x[i], centroids_y[i]))
fire_centr <- fit(rescale(clmfires, 100), window = temp_window,
method = "full", type = "count")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit(rescale(clmfires, 100), window = temp_window,
method = "divided", type = "count")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
true_n <- rescale(clmfires, 100)[temp_window]$n
cat(paste0("Region ", i, ":\n"))
cat(paste0("True count in region ", i, ": ", true_n, "\n"))
cat(paste0("Estimated count in region ", i, " from full model: ",
round(centr_preds, 2), " (",
round(centr_ints[1], 2), ", ",
round(centr_ints[2], 2), ") \n"))
cat(paste0("Estimated count in region ", i, " from partitioned model: ",
round(agg_preds, 2), " (",
round(agg_ints[1], 2), ", ",
round(agg_ints[2], 2), ") \n"))
cat("\n")
lines(temp_window$bdry[[1]]$x, temp_window$bdry[[1]]$y)
text(centroids_x[i], centroids_y[i], true_n)
}
set.seed(75193)
centroids_x <- runif(n_regions, min(clmfires$x)/100,
max(clmfires$x)/100)
centroids_y <- runif(n_regions, min(clmfires$y)/100,
max(clmfires$y)/100)
fire_centr <- fit(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
image(centr_preds, zlim = bounds,
main = "Centralized Model \n (Wildfires Data)") # Whole model
for (i in 1:n_regions) {
temp_window <- disc(radius = region_radius, centre = c(centroids_x[i], centroids_y[i]))
fire_centr <- fit(rescale(clmfires, 100), window = temp_window,
method = "full", type = "count")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit(rescale(clmfires, 100), window = temp_window,
method = "divided", type = "count")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
true_n <- rescale(clmfires, 100)[temp_window]$n
cat(paste0("Region ", i, ":\n"))
cat(paste0("True count in region ", i, ": ", true_n, "\n"))
cat(paste0("Estimated count in region ", i, " from full model: ",
round(centr_preds, 2), " (",
round(centr_ints[1], 2), ", ",
round(centr_ints[2], 2), ") \n"))
cat(paste0("Estimated count in region ", i, " from partitioned model: ",
round(agg_preds, 2), " (",
round(agg_ints[1], 2), ", ",
round(agg_ints[2], 2), ") \n"))
cat("\n")
lines(temp_window$bdry[[1]]$x, temp_window$bdry[[1]]$y)
text(centroids_x[i], centroids_y[i], true_n)
}
n_regions <- 5
region_radius <- 0.75
set.seed(75193)
centroids_x <- runif(n_regions, min(clmfires$x)/100,
max(clmfires$x)/100)
centroids_y <- runif(n_regions, min(clmfires$y)/100,
max(clmfires$y)/100)
fire_centr <- fit(rescale(clmfires, 100), method = "full", type = "trend")
centr_preds <- fire_centr$preds
image(centr_preds, zlim = bounds,
main = "Centralized Model \n (Wildfires Data)") # Whole model
for (i in 1:n_regions) {
temp_window <- disc(radius = region_radius, centre = c(centroids_x[i], centroids_y[i]))
fire_centr <- fit(rescale(clmfires, 100), window = temp_window,
method = "full", type = "count")
centr_preds <- fire_centr$preds
centr_ints <- fire_centr$interval
fires_div <- fit(rescale(clmfires, 100), window = temp_window,
method = "divided", type = "count")
agg_preds <- fires_div$preds
agg_ints <- fires_div$interval
true_n <- rescale(clmfires, 100)[temp_window]$n
cat(paste0("Region ", i, ":\n"))
cat(paste0("True count in region ", i, ": ", true_n, "\n"))
cat(paste0("Estimated count in region ", i, " from full model: ",
round(centr_preds, 2), " (",
round(centr_ints[1], 2), ", ",
round(centr_ints[2], 2), ") \n"))
cat(paste0("Estimated count in region ", i, " from partitioned model: ",
round(agg_preds, 2), " (",
round(agg_ints[1], 2), ", ",
round(agg_ints[2], 2), ") \n"))
cat("\n")
lines(temp_window$bdry[[1]]$x, temp_window$bdry[[1]]$y)
text(centroids_x[i], centroids_y[i], true_n)
}
