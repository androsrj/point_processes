X <- matrix(sort(runif(2 * S)), ncol = 2)
train <- spatialData(n = n,
X = X,
K = K,
sigma2 = trueSigma2,
tau2 = trueTau2,
theta = trueTheta,
mu = trueMu)
save(train, file = "data/train.RData")
# Generate testing data
set.seed(mySeed)
X <- matrix(sort(runif(2 * STest)), ncol = 2)
test <- spatialData(n = nTest,
X = X,
K = K,
sigma2 = trueSigma2,
tau2 = trueTau2,
theta = trueTheta,
mu = trueMu)
save(test, file = "data/test.RData")
save(trueTheta, file = "data/theta.RData")
trueSigma2
trueTheta
# SOURCES
source("mcmc_functions/mcmc.R") # Metropolis-Gibbs Sampler
source("mcmc_functions/priors.R")
source("mcmc_functions/jacobians.R")
source("mcmc_functions/likelihood.R")
source("mcmc_functions/posterior.R")
source("other_functions/helper_functions.R") # Other misc functions (not part of MCMC)
source("other_functions/bsplines_2_3D.R")
load("data/train.RData")
load("data/test.RData")
load("data/theta.RData")
n <- nrow(train$X)
nTest <- nrow(test$X)
X <- train$X
Y <- train$Y
U <- train$U
D <- train$D
XTest <- test$X
YTest <- test$Y
UTest <- test$U
DTest <- test$D
K <- 9
propSD <- list(sigma2 = seq(0.1, 0.3, length = K),
tau2 = 0.3)
#theta <- runif(9, 0.5, 3)
theta <- trueTheta
results <- mcmc(X = X, Y = Y, D = D,
K = K,
theta = theta,
propSD = propSD,
nIter = 200, nBurn = 200, nThin=2,
model = "full_gp")
m <- matrix(1:9, 3, 3)
m
m <- matrix(1:9*1.5+2, 3, 3)
m
m <- round(m)
m
m[,2]
# SOURCES
source("mcmc_functions/mcmc.R") # Metropolis-Gibbs Sampler
source("mcmc_functions/priors.R")
source("mcmc_functions/jacobians.R")
source("mcmc_functions/likelihood.R")
source("mcmc_functions/posterior.R")
source("other_functions/helper_functions.R") # Other misc functions (not part of MCMC)
source("other_functions/bsplines_2_3D.R")
load("data/train.RData")
load("data/test.RData")
load("data/theta.RData")
n <- nrow(train$X)
nTest <- nrow(test$X)
X <- train$X
Y <- train$Y
U <- train$U
D <- train$D
XTest <- test$X
YTest <- test$Y
UTest <- test$U
DTest <- test$D
K <- 9
propSD <- list(sigma2 = seq(0.1, 0.3, length = K),
tau2 = 0.3)
#theta <- runif(9, 0.5, 3)
theta <- trueTheta
results <- mcmc(X = X, Y = Y, D = D,
K = K,
theta = theta,
propSD = propSD,
nIter = 200, nBurn = 200, nThin=2,
model = "full_gp")
# SOURCES
source("mcmc_functions/mcmc.R") # Metropolis-Gibbs Sampler
source("mcmc_functions/priors.R")
source("mcmc_functions/jacobians.R")
source("mcmc_functions/likelihood.R")
source("mcmc_functions/posterior.R")
source("other_functions/helper_functions.R") # Other misc functions (not part of MCMC)
source("other_functions/bsplines_2_3D.R")
load("data/train.RData")
load("data/test.RData")
load("data/theta.RData")
n <- nrow(train$X)
nTest <- nrow(test$X)
X <- train$X
Y <- train$Y
U <- train$U
D <- train$D
XTest <- test$X
YTest <- test$Y
UTest <- test$U
DTest <- test$D
K <- 9
propSD <- list(sigma2 = seq(0.1, 0.3, length = K),
tau2 = 0.3)
#theta <- runif(9, 0.5, 3)
theta <- trueTheta
results <- mcmc(X = X, Y = Y, D = D,
K = K,
theta = theta,
propSD = propSD,
nIter = 50, nBurn = 10, nThin=2,
model = "full_gp")
results$posteriorMeans
results$acceptance
trueSigma2
setwd("~/research/point_processes/lgcp")
library(lgcp)
library(spatstat)
library(spatstat.geom)
library(spatstat.utils)
library(sp)
load("sd_liver.RData")
load("popshape_liver.RData")
source("polygons.R")
#minimum.contrast(sd, model = "exponential", method = "g", intens = density(sd), transform = log)
#chooseCellwidth(sd, cwinit = 300)
CELLWIDTH <- 1000
EXT <- 2
polyolay <- getpolyol(data = sd, regionalcovariates = popshape,
cellwidth = CELLWIDTH, ext = EXT)
popshape@data <- guessinterp(popshape@data)
popshape@data <- assigninterp(df = popshape@data,
vars = c("pop", "males", "females"),
value = "ArealWeightedSum")
FORM <- X ~ pop + propmale + Income + Employment + Education +
Barriers + Crime + Environment
Zmat <- getZmat(formula = FORM, data = sd, regionalcovariates = popshape,
cellwidth = CELLWIDTH, ext = EXT, overl = polyolay)
Zmat[, "pop"] <- log(Zmat[, "pop"])
Zmat[, "pop"][is.infinite(Zmat[, "pop"])] <- min(
Zmat[, "pop"][!is.infinite(Zmat[, "pop"])])
priors <- lgcpPrior(etaprior = PriorSpec(
LogGaussianPrior(mean = log(c(1, 500)), variance = diag(0.15, 2))),
betaprior = PriorSpec(
GaussianPrior(mean = rep(0, 9), variance = diag(10^6, 9))))
INITS <- lgcpInits(etainit = log(c(sqrt(1.5), 275)), betainit = NULL)
cf <- CovFunction(exponentialCovFct)
mcmc.control <- mcmcpars(
mala.length = 25000, burnin = 5000, retain = 10,
adaptivescheme = andrieuthomsh(inith = 1, alpha = 0.5, C = 1,
targetacceptance = 0.574))
lg <- lgcpPredictSpatialPlusPars(formula = FORM, sd = sd, Zmat = Zmat,
model.priors = priors, model.inits = INITS, spatial.covmodel = cf,
cellwidth = CELLWIDTH, poisson.offset = NULL, mcmc.control = mcmc.control,
output.control = setoutput(gridfunction = dump2dir(
dirname = "liver/", forceSave = TRUE)),
ext = EXT)
saveRDS(lg, file = "liver/lg.RDS")
plot(lg, ask=FALSE)
plot(sd)
lg$EY.mean$grid[[1]]
image(lg$mcens, lg$ncens, lg$EY.mean$grid[[1]])
image(lg$mcens, lg$ncens, getCounts(sd, M=32, N=32, ext=1))
plot(lg, ask=FALSE)
plot(sd)
lg$EY.mean$grid[[1]]
image(lg$mcens, lg$ncens, lg$EY.mean$grid[[1]])
image(lg$mcens, lg$ncens, getCounts(sd, M=32, N=32, ext=1))
image(lg$mcens, lg$ncens, lg$EY.mean$grid[[1]])
image(lg$mcens, lg$ncens, getCounts(sd, M=32, N=32, ext=1))
sd$n
length(lg$EY.mean$grid)
lg$EY.mean$zvals
lg$y.mean$zvals
dim(lg$EY.mean$grid)
dim(lg$EY.mean$grid[[1]])
dim(lg$y.mean$grid[[1]])
sum(lg$y.mean$grid[[1]])
sum(lg$EY.mean$grid[[1]])
sum(lg$EY.mean$grid[[1]]>=1)
sum(lg$EY.mean$grid[[1]] > 1)
sum(lg$EY.mean$grid[[1]] > 0)
mean(lg$EY.mean$grid[[1]])
mean(lg$EY.mean$grid[[1]])*1024
sum(lg$EY.mean$grid[[1]] > 0.5)
sum(lg$EY.mean$grid[[1]] > 0.9)
sum(lg$EY.mean$grid[[1]] > 1)
sum(lg$EY.mean$grid[[1]] > 2)
sum(lg$EY.mean$grid[[1]] > 1.3)
hist(lg$EY.mean$grid[[1]])
summary(lg$EY.mean$grid[[1]])
summary(c(lg$EY.mean$grid[[1]]))
image(lg$mcens, lg$ncens, lg$EY.mean$grid[[1]])
F
plot(lg, ask=FALSE)
sum(lg$EY.mean$grid[[1]])
sum(lg$EY.mean$grid[[1]] >= 1)
library(lgcp)
library(spatstat)
library(spatstat.geom)
library(spatstat.utils)
library(sp)
load("sd_liver.RData")
load("popshape_liver.RData")
source("polygons.R")
set.seed(12)
grp1 <- sample(1:sd$n, 100)
sd <- sd[grp1]
#minimum.contrast(sd, model = "exponential", method = "g", intens = density(sd), transform = log)
#chooseCellwidth(sd, cwinit = 300)
CELLWIDTH <- 1000
EXT <- 2
polyolay <- getpolyol(data = sd, regionalcovariates = popshape,
cellwidth = CELLWIDTH, ext = EXT)
popshape@data <- guessinterp(popshape@data)
popshape@data <- assigninterp(df = popshape@data,
vars = c("pop", "males", "females"),
value = "ArealWeightedSum")
FORM <- X ~ pop + propmale + Income + Employment + Education +
Barriers + Crime + Environment
Zmat <- getZmat(formula = FORM, data = sd, regionalcovariates = popshape,
cellwidth = CELLWIDTH, ext = EXT, overl = polyolay)
Zmat[, "pop"] <- log(Zmat[, "pop"])
Zmat[, "pop"][is.infinite(Zmat[, "pop"])] <- min(
Zmat[, "pop"][!is.infinite(Zmat[, "pop"])])
priors <- lgcpPrior(etaprior = PriorSpec(
LogGaussianPrior(mean = log(c(1, 500)), variance = diag(0.15, 2))),
betaprior = PriorSpec(
GaussianPrior(mean = rep(0, 9), variance = diag(10^6, 9))))
INITS <- lgcpInits(etainit = log(c(sqrt(1.5), 275)), betainit = NULL)
cf <- CovFunction(exponentialCovFct)
mcmc.control <- mcmcpars(
mala.length = 25000, burnin = 5000, retain = 10,
adaptivescheme = andrieuthomsh(inith = 1, alpha = 0.5, C = 1,
targetacceptance = 0.574))
lg <- lgcpPredictSpatialPlusPars(formula = FORM, sd = sd, Zmat = Zmat,
model.priors = priors, model.inits = INITS, spatial.covmodel = cf,
cellwidth = CELLWIDTH, poisson.offset = NULL, mcmc.control = mcmc.control,
output.control = setoutput(gridfunction = dump2dir(
dirname = "liver/", forceSave = TRUE)),
ext = EXT)
saveRDS(lg, file = "liver/lg.RDS")
plot(lg, ask=FALSE)
plot(sd)
lg$EY.mean$grid[[1]]
image(lg$mcens, lg$ncens, lg$EY.mean$grid[[1]])
image(lg$mcens, lg$ncens, getCounts(sd, M=32, N=32, ext=1))
sum(lg$EY.mean$grid[[1]])
sum(lg$EY.mean$grid[[1]] >= 1)
sd$n
image(lg$mcens, lg$ncens, lg$EY.mean$grid[[1]])
image(lg$mcens, lg$ncens, getCounts(sd, M=32, N=32, ext=1))
sum(getCounts(sd, M=32, N=32, ext=1))
dim(popshape@data)
plot(popshape)
library(lgcp)
library(spatstat)
library(spatstat.geom)
library(spatstat.utils)
library(sp)
load("sd_liver.RData")
load("popshape_liver.RData")
source("polygons.R")
set.seed(12)
grp1 <- sample(1:sd$n, 100)
sd <- sd[grp1]
#minimum.contrast(sd, model = "exponential", method = "g", intens = density(sd), transform = log)
#chooseCellwidth(sd, cwinit = 300)
CELLWIDTH <- 500
EXT <- 2
polyolay <- getpolyol(data = sd, regionalcovariates = popshape,
cellwidth = CELLWIDTH, ext = EXT)
popshape@data <- guessinterp(popshape@data)
popshape@data <- assigninterp(df = popshape@data,
vars = c("pop", "males", "females"),
value = "ArealWeightedSum")
FORM <- X ~ pop + propmale + Income + Employment + Education +
Barriers + Crime + Environment
Zmat <- getZmat(formula = FORM, data = sd, regionalcovariates = popshape,
cellwidth = CELLWIDTH, ext = EXT, overl = polyolay)
Zmat[, "pop"] <- log(Zmat[, "pop"])
Zmat[, "pop"][is.infinite(Zmat[, "pop"])] <- min(
Zmat[, "pop"][!is.infinite(Zmat[, "pop"])])
priors <- lgcpPrior(etaprior = PriorSpec(
LogGaussianPrior(mean = log(c(1, 500)), variance = diag(0.15, 2))),
betaprior = PriorSpec(
GaussianPrior(mean = rep(0, 9), variance = diag(10^6, 9))))
INITS <- lgcpInits(etainit = log(c(sqrt(1.5), 275)), betainit = NULL)
cf <- CovFunction(exponentialCovFct)
mcmc.control <- mcmcpars(
mala.length = 25000, burnin = 5000, retain = 10,
adaptivescheme = andrieuthomsh(inith = 1, alpha = 0.5, C = 1,
targetacceptance = 0.574))
lg <- lgcpPredictSpatialPlusPars(formula = FORM, sd = sd, Zmat = Zmat,
model.priors = priors, model.inits = INITS, spatial.covmodel = cf,
cellwidth = CELLWIDTH, poisson.offset = NULL, mcmc.control = mcmc.control,
output.control = setoutput(gridfunction = dump2dir(
dirname = "liver/", forceSave = TRUE)),
ext = EXT)
saveRDS(lg, file = "liver/lg.RDS")
plot(lg, ask=FALSE)
plot(sd)
lg$EY.mean$grid[[1]]
image(lg$mcens, lg$ncens, lg$EY.mean$grid[[1]])
image(lg$mcens, lg$ncens, getCounts(sd, M=32, N=32, ext=1))
sum(lg$EY.mean$grid[[1]])
sum(lg$EY.mean$grid[[1]] >= 1)
lg$M
lg$N
getCounts(sd, M=64, N=64, ext=1)
image(lg$mcens, lg$ncens, getCounts(sd, M=32, N=32, ext=1))
sum(getCounts(sd, M=64, N=64, ext=1))
library(lgcp)
library(spatstat)
library(spatstat.geom)
library(spatstat.utils)
library(sp)
load("sd_liver.RData")
load("popshape_liver.RData")
source("polygons.R")
set.seed(12)
#grp1 <- sample(1:sd$n, 100)
#sd <- sd[grp1]
#minimum.contrast(sd, model = "exponential", method = "g", intens = density(sd), transform = log)
#chooseCellwidth(sd, cwinit = 300)
CELLWIDTH <- 500
EXT <- 2
polyolay <- getpolyol(data = sd, regionalcovariates = popshape,
cellwidth = CELLWIDTH, ext = EXT)
popshape@data <- guessinterp(popshape@data)
popshape@data <- assigninterp(df = popshape@data,
vars = c("pop", "males", "females"),
value = "ArealWeightedSum")
FORM <- X ~ pop + propmale + Income + Employment + Education +
Barriers + Crime + Environment
Zmat <- getZmat(formula = FORM, data = sd, regionalcovariates = popshape,
cellwidth = CELLWIDTH, ext = EXT, overl = polyolay)
Zmat[, "pop"] <- log(Zmat[, "pop"])
Zmat[, "pop"][is.infinite(Zmat[, "pop"])] <- min(
Zmat[, "pop"][!is.infinite(Zmat[, "pop"])])
priors <- lgcpPrior(etaprior = PriorSpec(
LogGaussianPrior(mean = log(c(1, 500)), variance = diag(0.15, 2))),
betaprior = PriorSpec(
GaussianPrior(mean = rep(0, 9), variance = diag(10^6, 9))))
INITS <- lgcpInits(etainit = log(c(sqrt(1.5), 275)), betainit = NULL)
cf <- CovFunction(exponentialCovFct)
mcmc.control <- mcmcpars(
mala.length = 25000, burnin = 5000, retain = 10,
adaptivescheme = andrieuthomsh(inith = 1, alpha = 0.5, C = 1,
targetacceptance = 0.574))
lg <- lgcpPredictSpatialPlusPars(formula = FORM, sd = sd, Zmat = Zmat,
model.priors = priors, model.inits = INITS, spatial.covmodel = cf,
cellwidth = CELLWIDTH, poisson.offset = NULL, mcmc.control = mcmc.control,
output.control = setoutput(gridfunction = dump2dir(
dirname = "liver/", forceSave = TRUE)),
ext = EXT)
saveRDS(lg, file = "liver/lg.RDS")
plot(lg, ask=FALSE)
plot(sd)
lg$EY.mean$grid[[1]]
image(lg$mcens, lg$ncens, lg$EY.mean$grid[[1]])
image(lg$mcens, lg$ncens, getCounts(sd, M=32, N=32, ext=1))
sd$n
image(lg$mcens, lg$ncens, getCounts(sd, M=32, N=32, ext=1))
image(lg$mcens, lg$ncens, lg$EY.mean$grid[[1]])
lg$M
image(lg$mcens, lg$ncens, getCounts(sd, M=64, N=64, ext=1))
sum(lg$EY.mean$grid[[1]])
sum(lg$EY.mean$grid[[1]] >= 1)
summaryc((lg$EY.mean$grid[[1]]))
summary(c((lg$EY.mean$grid[[1]]))
)
length(lg$EY.mean$grid)
setwd("~/research/point_processes/lgcp")
library(lgcp)
library(spatstat)
library(spatstat.geom)
library(spatstat.utils)
library(sp)
load("sd_liver.RData")
load("popshape_liver.RData")
source("polygons.R")
plot(sd)
summary(sd$x)
summary(sd$y)
#minimum.contrast(sd, model = "exponential", method = "g", intens = density(sd), transform = log)
#chooseCellwidth(sd, cwinit = 300)
CELLWIDTH <- 10000
EXT <- 2
polyolay <- getpolyol(data = sd, regionalcovariates = popshape,
cellwidth = CELLWIDTH, ext = EXT)
popshape@data <- guessinterp(popshape@data)
popshape@data <- assigninterp(df = popshape@data,
vars = c("pop", "males", "females"),
value = "ArealWeightedSum")
FORM <- X ~ pop + propmale + Income + Employment + Education +
Barriers + Crime + Environment
Zmat <- getZmat(formula = FORM, data = sd, regionalcovariates = popshape,
cellwidth = CELLWIDTH, ext = EXT, overl = polyolay)
Zmat[, "pop"] <- log(Zmat[, "pop"])
Zmat[, "pop"][is.infinite(Zmat[, "pop"])] <- min(
Zmat[, "pop"][!is.infinite(Zmat[, "pop"])])
priors <- lgcpPrior(etaprior = PriorSpec(
LogGaussianPrior(mean = log(c(1, 500)), variance = diag(0.15, 2))),
betaprior = PriorSpec(
GaussianPrior(mean = rep(0, 9), variance = diag(10^6, 9))))
INITS <- lgcpInits(etainit = log(c(sqrt(1.5), 275)), betainit = NULL)
cf <- CovFunction(exponentialCovFct)
mcmc.control <- mcmcpars(
mala.length = 25000, burnin = 5000, retain = 10,
adaptivescheme = andrieuthomsh(inith = 1, alpha = 0.5, C = 1,
targetacceptance = 0.574))
lg <- lgcpPredictSpatialPlusPars(formula = FORM, sd = sd, Zmat = Zmat,
model.priors = priors, model.inits = INITS, spatial.covmodel = cf,
cellwidth = CELLWIDTH, poisson.offset = NULL, mcmc.control = mcmc.control,
output.control = setoutput(gridfunction = dump2dir(
dirname = "liver/", forceSave = TRUE)),
ext = EXT)
#minimum.contrast(sd, model = "exponential", method = "g", intens = density(sd), transform = log)
#chooseCellwidth(sd, cwinit = 300)
CELLWIDTH <- 5000
EXT <- 2
polyolay <- getpolyol(data = sd, regionalcovariates = popshape,
cellwidth = CELLWIDTH, ext = EXT)
popshape@data <- guessinterp(popshape@data)
popshape@data <- assigninterp(df = popshape@data,
vars = c("pop", "males", "females"),
value = "ArealWeightedSum")
FORM <- X ~ pop + propmale + Income + Employment + Education +
Barriers + Crime + Environment
Zmat <- getZmat(formula = FORM, data = sd, regionalcovariates = popshape,
cellwidth = CELLWIDTH, ext = EXT, overl = polyolay)
Zmat[, "pop"] <- log(Zmat[, "pop"])
Zmat[, "pop"][is.infinite(Zmat[, "pop"])] <- min(
Zmat[, "pop"][!is.infinite(Zmat[, "pop"])])
priors <- lgcpPrior(etaprior = PriorSpec(
LogGaussianPrior(mean = log(c(1, 500)), variance = diag(0.15, 2))),
betaprior = PriorSpec(
GaussianPrior(mean = rep(0, 9), variance = diag(10^6, 9))))
INITS <- lgcpInits(etainit = log(c(sqrt(1.5), 275)), betainit = NULL)
cf <- CovFunction(exponentialCovFct)
mcmc.control <- mcmcpars(
mala.length = 25000, burnin = 5000, retain = 10,
adaptivescheme = andrieuthomsh(inith = 1, alpha = 0.5, C = 1,
targetacceptance = 0.574))
lg <- lgcpPredictSpatialPlusPars(formula = FORM, sd = sd, Zmat = Zmat,
model.priors = priors, model.inits = INITS, spatial.covmodel = cf,
cellwidth = CELLWIDTH, poisson.offset = NULL, mcmc.control = mcmc.control,
output.control = setoutput(gridfunction = dump2dir(
dirname = "liver/", forceSave = TRUE)),
ext = EXT)
#minimum.contrast(sd, model = "exponential", method = "g", intens = density(sd), transform = log)
#chooseCellwidth(sd, cwinit = 300)
CELLWIDTH <- 3000
EXT <- 2
polyolay <- getpolyol(data = sd, regionalcovariates = popshape,
cellwidth = CELLWIDTH, ext = EXT)
popshape@data <- guessinterp(popshape@data)
popshape@data <- assigninterp(df = popshape@data,
vars = c("pop", "males", "females"),
value = "ArealWeightedSum")
FORM <- X ~ pop + propmale + Income + Employment + Education +
Barriers + Crime + Environment
Zmat <- getZmat(formula = FORM, data = sd, regionalcovariates = popshape,
cellwidth = CELLWIDTH, ext = EXT, overl = polyolay)
Zmat[, "pop"] <- log(Zmat[, "pop"])
Zmat[, "pop"][is.infinite(Zmat[, "pop"])] <- min(
Zmat[, "pop"][!is.infinite(Zmat[, "pop"])])
priors <- lgcpPrior(etaprior = PriorSpec(
LogGaussianPrior(mean = log(c(1, 500)), variance = diag(0.15, 2))),
betaprior = PriorSpec(
GaussianPrior(mean = rep(0, 9), variance = diag(10^6, 9))))
INITS <- lgcpInits(etainit = log(c(sqrt(1.5), 275)), betainit = NULL)
cf <- CovFunction(exponentialCovFct)
mcmc.control <- mcmcpars(
mala.length = 25000, burnin = 5000, retain = 10,
adaptivescheme = andrieuthomsh(inith = 1, alpha = 0.5, C = 1,
targetacceptance = 0.574))
lg <- lgcpPredictSpatialPlusPars(formula = FORM, sd = sd, Zmat = Zmat,
model.priors = priors, model.inits = INITS, spatial.covmodel = cf,
cellwidth = CELLWIDTH, poisson.offset = NULL, mcmc.control = mcmc.control,
output.control = setoutput(gridfunction = dump2dir(
dirname = "liver/", forceSave = TRUE)),
ext = EXT)
plot(lg, ask=FALSE)
plot(sd)
lg$EY.mean$grid[[1]]
image(lg$mcens, lg$ncens, lg$EY.mean$grid[[1]])
image(lg$mcens, lg$ncens, getCounts(sd, M=64, N=64, ext=1))
lg$M
image(lg$mcens, lg$ncens, getCounts(sd, M=16, N=16, ext=1))
lg$N
image(lg$mcens, lg$ncens, getCounts(sd, M=16, N=8, ext=1))
image(lg$mcens, lg$ncens, lg$EY.mean$grid[[1]])
image(lg$mcens, lg$ncens, getCounts(sd, M=16, N=8, ext=1))
sum(lg$EY.mean$grid[[1]])
sum(lg$EY.mean$grid[[1]] >= 1)
length(lg$EY.mean$grid)
