integral.im(Z)
cells$x
cells$y
f <- function(x,y) {
exp(-3 + 1*x + 2*x^2 - 0.5*y^)
f <- function(x,y) {
exp(-3 + 1*x + 2*x^2 - 0.5*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
f <- function(x,y) {
exp(-3 + 1*x + 0.1*x^2 - 0.5*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
exp(-3 - 5*x - 0.1*x^2 - 0.5*y)
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
f <- function(x,y) {
exp(-3 - 5*x - 2*x^2 - 0.5*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
f <- function(x,y) {
exp(-3 - 0.5*x - 0.2*x^2 - 0.5*y)
}
lambda <- function(x, y) {
exp(-3.664 + 0.73*x + 14.802*x^2 - 7.545*x^3 - 12.66*x^4 - 0.577*x^5 - 0.031*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
exp(-3 - 0.5*x + 0.2*x^2 - 0.5*y)
f <- function(x,y) {
exp(-3 - 0.5*x + 0.2*x^2 - 0.5*y)
}
lambda <- function(x, y) {
exp(-3.664 + 0.73*x + 14.802*x^2 - 7.545*x^3 - 12.66*x^4 - 0.577*x^5 - 0.031*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
exp(-3 - 0.5*x + 0.0002*x^2 - 0.5*y)
f <- function(x,y) {
exp(-3 - 0.5*x + 0.0002*x^2 - 0.5*y)
}
lambda <- function(x, y) {
exp(-3.664 + 0.73*x + 14.802*x^2 - 7.545*x^3 - 12.66*x^4 - 0.577*x^5 - 0.031*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
exp(-3 - 0.5*x + 0.02*x^2 - 0.5*y)
f <- function(x,y) {
exp(-3 - 0.5*x + 0.02*x^2 - 0.5*y)
}
lambda <- function(x, y) {
exp(-3.664 + 0.73*x + 14.802*x^2 - 7.545*x^3 - 12.66*x^4 - 0.577*x^5 - 0.031*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
exp(-3 - 0.1*x + 0.02*x^2 - 0.5*y)
f <- function(x,y) {
exp(-3 - 0.1*x + 0.02*x^2 - 0.5*y)
}
lambda <- function(x, y) {
exp(-3.664 + 0.73*x + 14.802*x^2 - 7.545*x^3 - 12.66*x^4 - 0.577*x^5 - 0.031*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
exp(-3 - 0.02*x + 0.02*x^2 - 0.5*y)
f <- function(x,y) {
exp(-3 - 0.02*x + 0.02*x^2 - 0.5*y)
}
lambda <- function(x, y) {
exp(-3.664 + 0.73*x + 14.802*x^2 - 7.545*x^3 - 12.66*x^4 - 0.577*x^5 - 0.031*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
exp(-3 - 0.02*x + 0.1*x^2 - 0.5*y)
f <- function(x,y) {
exp(-3 - 0.02*x + 0.1*x^2 - 0.5*y)
}
lambda <- function(x, y) {
exp(-3.664 + 0.73*x + 14.802*x^2 - 7.545*x^3 - 12.66*x^4 - 0.577*x^5 - 0.031*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
exp(-3 - 0.02*x + 0.03*x^2 - 0.5*y)
f <- function(x,y) {
exp(-3 - 0.02*x + 0.03*x^2 - 0.5*y)
}
lambda <- function(x, y) {
exp(-3.664 + 0.73*x + 14.802*x^2 - 7.545*x^3 - 12.66*x^4 - 0.577*x^5 - 0.031*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
exp(-3 - 0.02*x + 0.04*x^2 - 0.5*y)
f <- function(x,y) {
exp(-3 - 0.02*x + 0.04*x^2 - 0.5*y)
}
lambda <- function(x, y) {
exp(-3.664 + 0.73*x + 14.802*x^2 - 7.545*x^3 - 12.66*x^4 - 0.577*x^5 - 0.031*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
exp(-3 - 0.02*x + 0.031*x^2 - 0.5*y)
f <- function(x,y) {
exp(-3 - 0.02*x + 0.031*x^2 - 0.5*y)
}
lambda <- function(x, y) {
exp(-3.664 + 0.73*x + 14.802*x^2 - 7.545*x^3 - 12.66*x^4 - 0.577*x^5 - 0.031*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
exp(-3 - 0.02*x + 0.032*x^2 - 0.5*y)
f <- function(x,y) {
exp(-3 - 0.02*x + 0.032*x^2 - 0.5*y)
}
lambda <- function(x, y) {
exp(-3.664 + 0.73*x + 14.802*x^2 - 7.545*x^3 - 12.66*x^4 - 0.577*x^5 - 0.031*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
exp(-3 - 0.02*x + 0.0325*x^2 - 0.5*y)
f <- function(x,y) {
exp(-3 - 0.02*x + 0.0325*x^2 - 0.5*y)
}
lambda <- function(x, y) {
exp(-3.664 + 0.73*x + 14.802*x^2 - 7.545*x^3 - 12.66*x^4 - 0.577*x^5 - 0.031*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
exp(-3 - 0.0199*x + 0.0325*x^2 - 0.5*y)
f <- function(x,y) {
exp(-3 - 0.0199*x + 0.0325*x^2 - 0.5*y)
}
lambda <- function(x, y) {
exp(-3.664 + 0.73*x + 14.802*x^2 - 7.545*x^3 - 12.66*x^4 - 0.577*x^5 - 0.031*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
exp(-3 - 0.0195*x + 0.0325*x^2 - 0.5*y)
f <- function(x,y) {
exp(-3 - 0.0195*x + 0.0325*x^2 - 0.5*y)
}
lambda <- function(x, y) {
exp(-3.664 + 0.73*x + 14.802*x^2 - 7.545*x^3 - 12.66*x^4 - 0.577*x^5 - 0.031*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
exp(-3 - 0.019*x + 0.0325*x^2 - 0.5*y)
f <- function(x,y) {
exp(-3 - 0.019*x + 0.0325*x^2 - 0.5*y)
}
lambda <- function(x, y) {
exp(-3.664 + 0.73*x + 14.802*x^2 - 7.545*x^3 - 12.66*x^4 - 0.577*x^5 - 0.031*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
exp(-3 - 0.019*x + 0.0326*x^2 - 0.5*y)
f <- function(x,y) {
exp(-3 - 0.019*x + 0.0326*x^2 - 0.5*y)
}
lambda <- function(x, y) {
exp(-3.664 + 0.73*x + 14.802*x^2 - 7.545*x^3 - 12.66*x^4 - 0.577*x^5 - 0.031*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
exp(-3 - 0.019*x + 0.0325*x^2 - 0.5*y)
f <- function(x,y) {
exp(-3 - 0.019*x + 0.0325*x^2 - 0.5*y)
}
lambda <- function(x, y) {
exp(-3.664 + 0.73*x + 14.802*x^2 - 7.545*x^3 - 12.66*x^4 - 0.577*x^5 - 0.031*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
lgcp1 <- stlgcppm(catsub, ~ 1 + poly(x, 2) + y)
lgcp1
exp(-3.834 + 1.568*x + 11.772*x^2 - 0.027*y)
f <- function(x,y) {
exp(-3.834 + 1.568*x + 11.772*x^2 - 0.027*y)
}
lambda <- function(x, y) {
exp(-3.664 + 0.73*x + 14.802*x^2 - 7.545*x^3 - 12.66*x^4 - 0.577*x^5 - 0.031*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
f <- function(x,y) {
log(-3.834 + 1.568*x + 11.772*x^2 - 0.027*y)
}
lambda <- function(x, y) {
exp(-3.664 + 0.73*x + 14.802*x^2 - 7.545*x^3 - 12.66*x^4 - 0.577*x^5 - 0.031*y)
}
W <- owin(c(20, 28), c(33.5, 40.5))
Z <- as.im(f, W)
integral.im(Z)
poly(catsub$x)
poly(catsub$x, 3)
poly(catsub$df$x, 3)
lgcp1
setwd("~/research/point_processes/stopp")
library(stopp)
library(spatstat)
library(dplyr)
catsub <- stp(greececatalog$df[1:200,])
lgcp1 <- stlgcppm(catsub, ~ 1 + poly(x, 3) + y + t)
lgcp1
vol <- diff(range(greececatalog$df[1:200, 1])) *
diff(range(greececatalog$df[1:200, 2])) *
diff(range(greececatalog$df[1:200, 3]))
pred <- mean(lgcp1$l) * vol
pred
lgcp2 <- stlgcppm(greececatalog, ~ 1 + poly(x, 3) + y + t)
lgcp2
vol <- diff(range(greececatalog$df[, 1])) *
diff(range(greececatalog$df[, 2])) *
diff(range(greececatalog$df[, 3]))
pred <- mean(lgcp2$l) * vol
pred
fires <- stp(data.frame(x = clmfires$x, y = clmfires$y, t = seq(0, 1, length = clmfires$n)))
lgcp3 <- stlgcppm(fires, ~ 1 + poly(x, 3) + y)
lgcp3
vol <- diff(range(fires$df[, 1])) *
diff(range(fires$df[, 2])) *
diff(range(fires$df[, 3]))
pred <- mean(lgcp3$l) * vol
pred
index <- fires$df$x > 250 & fires$df$y < 150 & fires$df$t > 0.25
sum(index)
newdf <- fires$df[index, ]
vol <- diff(range(newdf[, 1])) *
diff(range(newdf[, 2])) *
diff(range(newdf[, 3]))
pred <- mean(lgcp3$l[index]) * vol
pred
### Preliminary simulation: Randomly divide clmfires into 2 datasets
### Fit 2 separate models and predict occurrences for each
### Then add predictions together
n <- clmfires$n
n
index <- sample(1:n, n/2)
### Preliminary simulation: Randomly divide clmfires into 2 datasets
### Fit 2 separate models and predict occurrences for each
### Then add predictions together
n <- clmfires$n
index <- sample(1:n, n/2)
lgcp3
n <- clmfires$n
time <- seq(0, 1, length = n)
index <- sample(1:n, n/2)
fires1 <- stp(data.frame(x = clmfires$x[index], y = clmfires$y[index], t = time[index]))
fires2 <- stp(data.frame(x = clmfires$x[-index], y = clmfires$y[-index], t = time[-index]))
lgcp_subset1 <- stlgcppm(fires1, ~ 1 + poly(x, 3) + y)
fires1
fires1$df
dim(fires1$df)
dim(fires2$df)
colnames(fires1$df)
lgcp_subset1 <- stlgcppm(fires1, ~ 1 + poly(x, 3) + y)
lgcp_subset1
lgcp3
lgcp_subset2 <- stlgcppm(fires2, ~ 1 + poly(x, 3) + y)
# Predict for model 1 (entire window)
vol <- diff(range(fires$df[, 1])) *
diff(range(fires$df[, 2])) *
diff(range(fires$df[, 3]))
pred1 <- mean(lgcp_subset1$l) * vol
pred2 <- mean(lgcp_subset2$l) * vol
pred1
pred2
pred1 + pred2
vol <- diff(range(fires$df[, 1])) *
diff(range(fires$df[, 2])) *
diff(range(fires$df[, 3]))
pred <- mean(lgcp3$l) * vol
pred
pred1
pred2
lgcp_subset1
lgcp_subset2
lgcp_subset1$IntCoefs
lgcp_subset1$IntCoefs
lgcp_subset2$IntCoefs
lgcp3$IntCoefs
# Predict for each model (smaller window)
new_index <- fires$df$x > 250 & fires$df$y < 150 & fires$df$t > 0.25
sum(new_index)
newdf <- fires$df[new_index, ]
vol <- diff(range(newdf[, 1])) *
diff(range(newdf[, 2])) *
diff(range(newdf[, 3]))
pred1 <- mean(lgcp_subset1$l) * vol
pred2 <- mean(lgcp_subset2$l) * vol
pred1
pred2
pred1 + pred2
vol <- diff(range(newdf[, 1])) *
diff(range(newdf[, 2])) *
diff(range(newdf[, 3]))
pred <- mean(lgcp3$l[index]) * vol
pred
# Predict for each model (smaller window)
new_index <- fires$df$x > 250 & fires$df$y < 150
sum(new_index)
newdf <- fires$df[new_index, ]
vol <- diff(range(newdf[, 1])) *
diff(range(newdf[, 2])) *
diff(range(newdf[, 3]))
pred1 <- mean(lgcp_subset1$l) * vol
pred2 <- mean(lgcp_subset2$l) * vol
pred1
pred2
pred1 + pred2
lgcp3$l
length(lgcp3$l)
lgcp3$IntCoefs
summary(lgcp3)
indices <- sample(rep(1:4,each = nrow(Seatbelts)/4))
n <- clmfires$n
nCores <- 4
indices <- sample(rep(1:nCores, each = n / nCores))
N <- clmfires$n
nCores <- 4
indices <- sample(rep(1:nCores, each = N / nCores))
indicies
indices
i=1
index <- which(indices == i)
index
length(index)
N <- clmfires$n
time <- seq(0, 1, length = N)
fires <- stp(data.frame(x = clmfires$x, y = clmfires$y, t = time))
nCores <- 4
indices <- sample(rep(1:nCores, each = N / nCores))
# Calculate volume for entire window
vol_full <- diff(range(fires$df[, 1])) *
diff(range(fires$df[, 2])) *
diff(range(fires$df[, 3]))
library(stopp)
library(spatstat)
library(dplyr)
N <- clmfires$n
time <- seq(0, 1, length = N)
fires <- stp(data.frame(x = clmfires$x, y = clmfires$y, t = time))
nCores <- 4
indices <- sample(rep(1:nCores, each = N / nCores))
# Calculate volume for entire window
vol_full <- diff(range(fires$df[, 1])) *
diff(range(fires$df[, 2])) *
diff(range(fires$df[, 3]))
# Calculate volume for smaller window
index <- fires$df$x > 250 & fires$df$y < 150 & fires$df$t > 0.25
sum(index)
newdf <- fires$df[index, ]
vol_window <- diff(range(newdf[, 1])) *
diff(range(newdf[, 2])) *
diff(range(newdf[, 3]))
# For loop (will later change to parallel)
pred_full <- pred_window <- numeric(nCores)
for (i in 1:nCores) {
index <- which(indices == i)
subset <- stp(data.frame(x = clmfires$x[index], y = clmfires$y[index], t = time[index]))
lgcp_subset <- stlgcppm(subset, ~ 1 + poly(x, 3) + y)
pred_full[i] <- mean(lgcp_subset$l) * vol_full
pred_window[i] <- mean(lgcp_subset$l) * vol_window
}
sum(pred_full)
sum(pred_window)
sum(runtimes)
lgcp_subset$time
as.numeric("0.981 min")
gsub("\\D", "", 0.98 min")
gsub("\\D", "", "0.98 min")
substr("0.981 minutes", -7, -1)
substr("0.981 minutes", 1, nchar("0.981 minutes") - 7)
substr("0.981 minutes", 1, nchar("0.981 minutes") - 8)
as.numeric(substr("0.981 minutes", 1, nchar("0.981 minutes") - 8))
library(stopp)
library(spatstat)
library(dplyr)
N <- clmfires$n
time <- seq(0, 1, length = N)
fires <- stp(data.frame(x = clmfires$x, y = clmfires$y, t = time))
nCores <- 8
indices <- sample(rep(1:nCores, each = N / nCores))
# Calculate volume for entire window
vol_full <- diff(range(fires$df[, 1])) *
diff(range(fires$df[, 2])) *
diff(range(fires$df[, 3]))
# Calculate volume for smaller window
index <- fires$df$x > 250 & fires$df$y < 150 & fires$df$t > 0.25
sum(index)
newdf <- fires$df[index, ]
vol_window <- diff(range(newdf[, 1])) *
diff(range(newdf[, 2])) *
diff(range(newdf[, 3]))
# For loop (will later change to parallel)
pred_full <- pred_window <- runtimes <- numeric(nCores)
for (i in 1:nCores) {
index <- which(indices == i)
subset <- stp(data.frame(x = clmfires$x[index], y = clmfires$y[index], t = time[index]))
lgcp_subset <- stlgcppm(subset, ~ 1 + poly(x, 3) + y)
pred_full[i] <- mean(lgcp_subset$l) * vol_full
pred_window[i] <- mean(lgcp_subset$l) * vol_window
runtimes[i] <- as.numeric(substr(lgcp_subset$time, 1, nchar(lgcp_subset$time) - 8))
}
sum(pred_full)
sum(pred_window)
sum(runtimes)
max(runtimes)
N <- nrow(greececatalog$df)
N <- nrow(greececatalog$df)
nCores <- 8
indices <- sample(rep(1:nCores, each = N / nCores))
table(indices)
N/8
library(stopp)
library(spatstat)
library(dplyr)
N <- nrow(greececatalog$df)
nCores <- 8
indices <- sample(rep(1:nCores, each = N / nCores))
# Calculate volume for entire window
vol_full <- diff(range(greececatalog$df[, 1])) *
diff(range(greececatalog$df[, 2])) *
diff(range(greececatalog$df[, 3]))
# Calculate volume for smaller window
new_index <- greececatalog$df$x > 250 & greececatalog$df$y < 150 & greececatalog$df$t > 0.25
sum(new_index)
newdf <- greececatalog$df[new_index, ]
vol_window <- diff(range(newdf[, 1])) *
diff(range(newdf[, 2])) *
diff(range(newdf[, 3]))
# For loop (will later change to parallel)
pred_full <- pred_window <- runtimes <- numeric(nCores)
for (i in 1:nCores) {
index <- which(indices == i)
subset <- stp(data.frame(x = greececatalog$df$x[index],
y = greececatalog$df$y[index],
t = greececatalog$df$t[index]))
lgcp_subset <- stlgcppm(subset, ~ 1 + poly(x, 3) + y + t)
pred_full[i] <- mean(lgcp_subset$l) * vol_full
pred_window[i] <- mean(lgcp_subset$l) * vol_window
runtimes[i] <- as.numeric(substr(lgcp_subset$time, 1, nchar(lgcp_subset$time) - 8))
}
sum(pred_full)
sum(pred_window)
sum(runtimes)
max(runtimes)
N
table(indices)
pred_window
vol_window
range(greececatalog$df$x)
range(greececatalog$df$y)
range(greececatalog$df$t)
# Calculate volume for smaller window
new_index <- greececatalog$df$x > 25 & greececatalog$df$y < 36 & greececatalog$df$t > 40000
sum(new_index)
newdf <- greececatalog$df[new_index, ]
vol_window <- diff(range(newdf[, 1])) *
diff(range(newdf[, 2])) *
diff(range(newdf[, 3]))
vol_window
# For loop (will later change to parallel)
pred_full <- pred_window <- runtimes <- numeric(nCores)
for (i in 1:nCores) {
index <- which(indices == i)
subset <- stp(data.frame(x = greececatalog$df$x[index],
y = greececatalog$df$y[index],
t = greececatalog$df$t[index]))
lgcp_subset <- stlgcppm(subset, ~ 1 + poly(x, 3) + y + t)
pred_full[i] <- mean(lgcp_subset$l) * vol_full
pred_window[i] <- mean(lgcp_subset$l) * vol_window
runtimes[i] <- as.numeric(substr(lgcp_subset$time, 1, nchar(lgcp_subset$time) - 8))
}
sum(pred_full)
sum(pred_window)
sum(runtimes)
max(runtimes)
sum(new_index)
N
pred_window
lgcp2 <- stlgcppm(greececatalog, ~ 1 + poly(x, 3) + y + t)
lgcp2
vol <- diff(range(greececatalog$df[, 1])) *
diff(range(greececatalog$df[, 2])) *
diff(range(greececatalog$df[, 3]))
pred <- mean(lgcp2$l) * vol
pred
